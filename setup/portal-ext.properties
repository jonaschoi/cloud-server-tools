##
## Browser Launcher
##

    #
    # Enter a URL to automatically launch a browser to that URL when the portal
    # has fully initialized. Enter a blank URL to disable this feature.
    #
    browser.launcher.url=http://localhost:6200

 #
    # Set the default landing page path for logged in users relative to the
    # server path. This is the page users are automatically redirected to after
    # logging in. For example, if you want the default landing page to be
    # http://localhost:8080/web/guest/login, set this to /web/guest/login. To
    # activate this feature, set auth.forward.by.last.path to true. To customize
    # the behavior, see com.liferay.portal.events.DefaultLandingPageAction in
    # the "login.events.post" property above.
    #
   # default.landing.page.path=/home
    
# Set the default logout page path for users relative to the server path.
    # This is the page users are automatically redirected to after logging out.
    # For example, if you want the default logout page to be
    # http://localhost:8080/web/guest/logout, set this to /web/guest/logout. To
    # activate this feature, set auth.forward.by.last.path to true. To customize
    # the behavior, see com.liferay.portal.events.DefaultLogoutPageAction in
    # the "logout.events.post" property above.
    #
    default.logout.page.path=/home

##
## Setup Wizard
##

    #
    # Set this property to true if the Setup Wizard should be displayed the
    # first time the portal is started.
    #
    setup.wizard.enabled=false

##
## Properties Override
##

    #
    # Specify where to get the overridden properties. Updates should not be made
    # on portal.properties or on portal-bundle.properties, but in
    # portal-ext.properties.
    #
    # The default read order is: portal.properties, portal-bundle.properties,
    # portal-ext.properties, and then portal-setup-wizard.properties.
    #
    include-and-override=${liferay.home}/portal-ext.local.properties

##
## Portal Context
##

    #
    # Set this property if the application server is served behind a proxy and
    # a prefix needs to be added to the portal servlet context path. This prefix
    # will also be added to static resources served by layout templates,
    # portlets, and themes.
    #
    #portal.proxy.path=/instance01

##
## Passwords
##

    #
    # Set the properties of the default password policy.
    #
    passwords.default.policy.change.required=false

    #
    # Set this to true to enable reminder queries that are used to help reset a
    # user's password.
    #
    users.reminder.queries.enabled=false

    #
    # Set the following encryption algorithm to designate the password
    # encryption algorithm to migrate from. This is only necessary if
    # upgrading from a release prior to 6.2 or if you wish to switch password
    # encryption algorithms when there are existing users with passwords in the
    # portal.
    #
    passwords.encryption.algorithm.legacy=NONE

    #
    # Set the following encryption algorithm to encrypt passwords. The default
    # algorithm is PBKDF2WithHmacSHA1/160/128000, generating 160 bit hashes
    # using 128,000 rounds.
    #
    # It is possible to decrease the rounds value in case of slow production
    # hardware, but be aware that 128,000 is the recommended value for 2014
    # by OWASP.
    #
    # If set to NONE, passwords are stored in the database as plain text.
    #
    passwords.encryption.algorithm=NONE


##
## Layouts
##

    #
    # Set this to true if users are shown that they do not have access to a
    # portlet. The portlet init parameter "show-portlet-access-denied" will
    # override this setting.
    #
    layout.show.portlet.access.denied=false

    #
    # Set this to true if users are shown that a portlet is inactive. The
    # portlet init parameter "show-portlet-inactive" will override this setting.
    #
    layout.show.portlet.inactive=false

    #
    # Set this to true if the portal should show HTTP status codes like 404 if
    # the requested page is not found.
    #
    layout.show.http.status=false

##
## Document Library Portlet
##

    dl.store.impl=com.liferay.portlet.documentlibrary.store.AdvancedFileSystemStore

##
## Sandbox Deploy
##

    #
    # Input a list of comma delimited class names that implement
    # com.liferay.portal.kernel.deploy.sandbox.SandboxDeployListener. These
    # classes are used to process sandbox style plugins.
    #
    sandbox.deploy.listeners=\
        com.liferay.portal.deploy.sandbox.PortletSandboxDeployListener,\
        com.liferay.portal.deploy.sandbox.ThemeSandboxDeployListener

    #
    # Set this to true to enable sandbox style plugin development.
    #
    sandbox.deploy.enabled=false

    #
    # Set the directory to scan for sand box style plugins.
    #
    sandbox.deploy.dir=${liferay.home}/sandbox

    #
    # Set the interval in milliseconds on how often to scan the directory for
    # changes.
    #
    sandbox.deploy.interval=3000

##
## Groups and Roles
##

    #
    # Set this to true if all users are required to agree to the terms of use.
    #
    terms.of.use.required=false

##
## Session
##

    #
    # Set the auto-extend mode to true to avoid having to ask the user whether
    # to extend the session or not. Instead, it will be automatically extended.
    # The purpose of this mode is to keep the session open as long as the user's
    # browser is open with a portal page loaded. It is recommended to use
    # this setting along with a smaller "session.timeout", such as 5 minutes,
    # for better performance.
    #
    session.timeout.auto.extend=true

    #
    # Set this to true to store the user's password in the session.
    #
    session.store.password=true

    #
    # Set this to true to track user clicks in memory for the duration of a
    # user's session. Setting this to true allows you to view all live sessions
    # in the Admin portlet.
    #
    session.tracker.memory.enabled=false

##
## Company
##

    #
    # The portal can authenticate users based on their email address, screen
    # name, or user id.
    #
    company.security.auth.type=screenName

##
## Users
##

    #
    # Input a class name that implements
    # com.liferay.portal.security.auth.ScreenNameValidator. This class will be
    # called to validate user screen names.
    #
    users.screen.name.validator=com.liferay.portal.security.auth.LiberalScreenNameValidator

##
## Live Users
##

    #
    # Set this to true to enable tracking via Live Users.
    #
    live.users.enabled=true


##
## Portal Resiliency
##

    #
    # Set this to true to turn on the Portal Resiliency feature.
    #
    portal.resiliency.enabled=true

    #
    # Set this to true to add a footer to each Portal Resiliency rendered
    # portlet. Each footer identifies the SPI that is rendering it.
    #
    # At runtime you can toggle showing the footer by setting the URL parameter
    # "portalResiliencyPortletShowFooter" to "1" for on or "0" for off.
    #
    portal.resiliency.portlet.show.footer=true

##
## Xuggler
##

    #
    # Set this to true to enable conversion and previewing of videos in the
    # Document Library portlet. See
    # http://www.xuggle.com/xuggler/downloads for more information.
    #
    xuggler.enabled=true

##
## Upload Servlet Request
##

    #
    # Set the maximum file size. Default is 1024 * 1024 * 100.
    #
    com.liferay.portal.upload.UploadServletRequestImpl.max.size=1048576000

##
## Login Portlet
##

    #
    # Set this to true to allow the user to choose a password during account
    # creation.
    #
    login.create.account.allow.custom.password=true

##
## Navigation Portlet
##

    #
    # Set the name of the display style which will be used by default.
    #
    navigation.display.style.default=from-level-1-with-title

##
## Ehcache
##

    #
    # Set this to true to allow Ehcache to use blocking caches. This improves
    # performance significantly by locking on keys instead of the entire cache.
    # The drawback is that threads can hang if the cache is not used properly.
    # Make sure that all queries that return a miss also immediately populate
    # the cache, or else other threads that are blocked on a query of that same
    # key will continue to hang. Reference Ehcache's BlockingCache for more
    # information. The blocking cache is no longer implemented by Ehcache's
    # BlockingCache, but by Liferay's BlockingPortalCache for better safety and
    # faster performance.
    #
    # Blocking cache together with transactional cache performs poorly, because
    # transactional cache affects the cache population visibility across
    # transactions. When transactional cache is on, blocking cache most likely
    # does nothing useful unless the transaction window time is short. When
    # transactional cache is off, it is better to turn on blocking cache for
    # better database access performance.
    #
    ehcache.blocking.cache.allowed=true

##
## Cluster Link
##

    #
    # Set this to true to enable the cluster link. This is required if you want
    # to cluster indexing and other features that depend on the cluster link.
    #
    cluster.link.enabled=false

##
## Audit Message
##

    audit.message.com.liferay.portal.model.Layout.VIEW=false

##
## Link Audit Portlet
##
     # You need to deploy the two Liferay audit plugins: audit-hook and audit-portlet
     # Also deploy the demo portlet link-audit-portlet
     # Enable the audit filter for link-audit-portlet

     com.liferay.portal.servlet.filters.audit.AuditFilter=true


##
## Velocity Engine
##
    #
    # Set a comma delimited list of Java classes the Velocity engine cannot have
    # access to.
    #
    velocity.engine.restricted.classes=

    #
    # Set a comma delimited list of variables the Velocity engine cannot
    # have access to. This will affect Dynamic Data List templates, Journal
    # templates, and Portlet Display templates.
    #
    velocity.engine.restricted.variables=
	
##
## Redirect
##

    #
    # Set this property to "ip" or "domain" for the redirect security method. If
    # set to "domain", the portal will only redirect users to domains listed in
    # the property "redirect.url.domain.allowed". If set to "ip", the portal
    # will only redirect to domains whose IP address resolve to an IP address
    # listed in the property "redirect.url.ip.allowed".
    #
	redirect.url.security.mode=domain
	
##
## JDBC
##	

    #
    # Set the properties used to create the JDBC data source. These properties
    # will only be read if the property "jdbc.default.jndi.name" is not set.
    #
    # The default settings are configured for an in-memory database called
    # Hypersonic that is not recommended for production use. Please change the
    # properties to use another database.
    #
    # Add dynamic-data-source-spring.xml to the property "spring.configs" to
    # configure the portal to use one database cluster for read calls and
    # another database cluster for write calls. The convention is to create a
    # set of properties prefixed with "jdbc.read." to handle read calls and
    # another set of properties prefixed with "jdbc.write." to handle write
    # calls. These data sources can also be created via JNDI by setting the
    # properties "jdbc.read.jndi.name" and "jdbc.write.jndi.name". Note that
    # these settings, though separate, are a copy of the default settings with
    # the newly overridden values.
    #
	
	#
	# MySQL
	#
	#jdbc.default.driverClassName=com.mysql.jdbc.Driver
	#jdbc.default.url=jdbc:mysql://localhost/dxpdemo?useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false
	#jdbc.default.username=root
	#jdbc.default.password=